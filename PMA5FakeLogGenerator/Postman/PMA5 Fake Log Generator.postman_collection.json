{
	"info": {
		"_postman_id": "8ea7ebb8-ddfd-430b-b584-5892571a9ac3",
		"name": "PMA5 Fake Log Generator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "772929"
	},
	"item": [
		{
			"name": "Fake Log Generator - Day 1",
			"item": [
				{
					"name": "AA11 - success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									"console.log(pm.collectionVariables.get(\"batchId\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"AA11\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "BB22 - 1st run fails",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"BB22\",\r\n    \"duration\": \"1\",\r\n    \"error\": \"Tasker out of memory\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "BB22 - 2nd run succeeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"batch\": \"{{batchId}}\",\r\n    \"machine\": \"BB22\",\r\n    \"duration\": \"5\",\r\n    \"iteration\": \"2\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "CC33 - 1st run fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"CC33\",\r\n    \"duration\": \"1\",\r\n    \"error\": \"Data Quality issue found in input data\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "CC33 - 2nd run fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"batch\": \"{{batchId}}\",\r\n    \"machine\": \"CC33\",\r\n    \"duration\": \"2\",\r\n    \"error\": \"Data Quality issue found in input data\",\r\n    \"iteration\": \"2\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "CC33 - 3rd run fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"batch\": \"{{batchId}}\",\r\n    \"machine\": \"CC33\",\r\n    \"duration\": \"1\",    \"error\": \"Data Quality issue found in input data\",\r\n    \"iteration\": \"3\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "DD44 - 1st run fails - never retried",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"DD44\",\r\n    \"duration\": \"1\",\r\n    \"error\": \"Tasker terminated by AKS\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "EE55 - 1st run fails - to be retried manually",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"EE55\",\r\n    \"duration\": \"1\",\r\n    \"error\": \"Data Quality issue found in input data\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "EE55 - Manual retry successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"batch\": \"{{batchId}}\",\r\n    \"machine\": \"EE55\",\r\n    \"duration\": \"6\",\r\n    \"manual\": true,\r\n    \"iteration\": \"99\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "FF66 - success - always 4 sec",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"FF66\",\r\n    \"duration\": \"4\"\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				},
				{
					"name": "GG77 - success - manual only",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"batchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData=pm.response.json();\r",
									"console.log(responseData);\r",
									"pm.environment.set(\"batchId\", responseData.batchId);\r",
									"pm.collectionVariables.unset(\"batchId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"machine\": \"GG77\",\r\n    \"manual\": true\r\n}"
						},
						"url": {
							"raw": "{{pma5url}}/api/FakeLogGenerator",
							"host": [
								"{{pma5url}}"
							],
							"path": [
								"api",
								"FakeLogGenerator"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests to generate log lines as if they were written by the Tasker."
		}
	]
}